{"mappings":"oeAaA,IAAAA,EAAAC,EAAA,S,aACA,MAAMC,EAAeC,SAASC,cAAc,kBACtCC,EAAeF,SAASG,eAAe,WACvCC,EAAeJ,SAASG,eAAe,iBACvCE,EAAaL,SAASG,eAAe,eAC3C,IAAIG,EAAW,CACbC,MAAO,GACPC,QAAS,IAUXT,EAAaU,iBAAiB,SAAS,EAAAZ,EAAAa,WARlB,KACnBJ,EAAW,CACTC,MAAOR,EAAaY,SAASJ,MAAMK,MACnCJ,QAAST,EAAaY,SAASH,QAAQI,OAEzCC,QAAQC,IAAIR,GACZS,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUZ,GAAU,GAET,MAG9D,MAAMa,EAAcJ,aAAaK,QAAQ,uBAsBzCrB,EAAaU,iBAAiB,UApBPY,IAGrB,GAFAA,EAAMC,iBAGkC,KAAtCvB,EAAaY,SAASJ,MAAMK,OACU,KAAtCb,EAAaY,SAASJ,MAAMK,MAE5BW,MAAKC,MAAAC,CAAA,mCAEL,IACE,MAAMC,EAAcT,KAAKU,MAAMR,GAC/BN,QAAQC,IAAI,cAAeY,GAC3BX,aAAaa,QACb7B,EAAa8B,O,CACb,MAAOC,GACPjB,QAAQC,IAAIgB,EAAMC,MAClBlB,QAAQC,IAAIgB,EAAMtB,Q,KAsBxBwB,OAAOvB,iBAAiB,QAhBP,KACf,IACE,MAAMwB,EAAmBhB,KAAKU,MAAMR,GACpC,GAAyB,OAArBc,EACF,OAIAlC,EAAaY,SAASJ,MAAMK,MAAQqB,EAAiB1B,MACrDR,EAAaY,SAASH,QAAQI,MAAQqB,EAAiBzB,O,CAEzD,MAAOsB,GACPjB,QAAQC,IAAIgB,EAAMC,MAClBlB,QAAQC,IAAIgB,EAAMtB,Q,KAKrB,MAYK0B,EAAgB,KACpBhC,EAAaiC,MAAMC,QAAU,OAAO,EAEtChC,EAAaK,iBAAiB,YAAayB,GAC3C7B,EAAWI,iBAAiB,YAAayB,GACzChC,EAAaO,iBAAiB,aAjBC,KAEa,KAAxCV,EAAaY,SAASH,QAAQI,OACQ,KAAtCb,EAAaY,SAASJ,MAAMK,MAE5BV,EAAaiC,MAAMC,QAAU,OAE7BlC,EAAaiC,MAAMC,QAAU,OAAO","sources":["src/js/03-feedback.js"],"sourcesContent":["//Rozklad jazdy:\n//import throttle\n//zadeklarowac wszystko co trzeba\n//stworzyc obiekt zawierajacy wszystkie dane tj. email, message\n//funkcja ktora zapisuje wszystko w formie, wykonsolować ją, json stringify i setItem na local storage\n//funkcja do submit event\n//jakiś if gdyby cymbał zostawił puste pola, a jesli git to wyczyscic elementy forma\n//catch error i konsol log dla .name i .message\n//przeładuj strone i pobierz wartosci z local storage\n//te wartosci .parse\n//jesli zwracają null to return\n//a jesli git to email.value=parsowaneInformacje.email/message\n//dać throttle do eventlistenera od zapisywania inputa\nimport { throttle } from 'lodash';\nconst feedbackForm = document.querySelector('.feedback-form');\nconst submitButton = document.getElementById('amazing');\nconst messageInput = document.getElementById('message-input');\nconst emailInput = document.getElementById('email-input');\nlet userData = {\n  email: '',\n  message: '',\n};\nconst saveUserData = () => {\n  userData = {\n    email: feedbackForm.elements.email.value,\n    message: feedbackForm.elements.message.value,\n  };\n  console.log(userData);\n  localStorage.setItem('feedback-form-state', JSON.stringify(userData));\n}; //zapisz w localstorage userData, konwersja na json\nfeedbackForm.addEventListener('input', throttle(saveUserData, 500)); //pobiera dane raz na pol sekundy, sprawdzilem\n//teraz submit\n\nconst getUserData = localStorage.getItem('feedback-form-state');\n\nconst submitFunction = event => {\n  event.preventDefault();\n\n  if (\n    feedbackForm.elements.email.value === '' ||\n    feedbackForm.elements.email.value === ''\n  ) {\n    alert`Please fill all the gaps!`;\n  } else {\n    try {\n      const currentData = JSON.parse(getUserData);\n      console.log(`User data: `, currentData);\n      localStorage.clear();\n      feedbackForm.reset();\n    } catch (error) {\n      console.log(error.name);\n      console.log(error.message);\n    }\n  }\n};\nfeedbackForm.addEventListener('submit', submitFunction);\n// load event\nconst loadPage = () => {\n  try {\n    const existingUserData = JSON.parse(getUserData);\n    if (existingUserData === null) {\n      return;\n    } //jeśli nie ma zapisanych danych to nie rob nic\n    //jeśli są dane to przywróć te wartości\n    else {\n      feedbackForm.elements.email.value = existingUserData.email;\n      feedbackForm.elements.message.value = existingUserData.message;\n    }\n  } catch (error) {\n    console.log(error.name);\n    console.log(error.message); //jesli error to zwroc jego nazwe i message\n  }\n};\nwindow.addEventListener('load', loadPage); //event listener na window a nie form, bo to ono jest przeładowywane\n\nconst magicHappensHereISwear = () => {\n  if (\n    feedbackForm.elements.message.value === '' ||\n    feedbackForm.elements.email.value === ''\n  ) {\n    submitButton.style.display = 'none';\n  } else {\n    submitButton.style.display = 'block';\n  }\n}; //dla submit\n\n//dla message oraz email\nconst resetMagicPls = () => {\n  submitButton.style.display = 'block';\n};\nmessageInput.addEventListener('mouseover', resetMagicPls);\nemailInput.addEventListener('mouseover', resetMagicPls);\nsubmitButton.addEventListener('mouseover', magicHappensHereISwear);\n//teraz na pewno nie da się submitować przy obu pustych polach :D\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$feedbackForm","document","querySelector","$945622fd0f572e60$var$submitButton","getElementById","$945622fd0f572e60$var$messageInput","$945622fd0f572e60$var$emailInput","$945622fd0f572e60$var$userData","email","message","addEventListener","throttle","elements","value","console","log","localStorage","setItem","JSON","stringify","$945622fd0f572e60$var$getUserData","getItem","event","preventDefault","alert","$945622fd0f572e60$var$t","$945622fd0f572e60$var$_","currentData","parse","clear","reset","error","name","window","existingUserData","$945622fd0f572e60$var$resetMagicPls","style","display"],"version":3,"file":"03-feedback.30a46dc5.js.map"}