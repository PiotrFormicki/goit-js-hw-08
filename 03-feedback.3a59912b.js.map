{"mappings":"oeAaA,IAAAA,EAAAC,EAAA,S,aACA,MAAMC,EAAeC,SAASC,cAAc,kBAC5C,IAAIC,EAAW,CACbC,MAAO,GACPC,QAAS,IAUXL,EAAaM,iBAAiB,SAAS,EAAAR,EAAAS,WARlB,KACnBJ,EAAW,CACTC,MAAOJ,EAAaQ,SAASJ,MAAMK,MACnCJ,QAASL,EAAaQ,SAASH,QAAQI,OAEzCC,QAAQC,IAAIR,GACZS,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUZ,GAAU,GAET,MAG9D,MAAMa,EAAcJ,aAAaK,QAAQ,uBAoBzCjB,EAAaM,iBAAiB,UAlBPY,IAGrB,GAFAA,EAAMC,iBAGkC,KAAtCnB,EAAaQ,SAASJ,MAAMK,OACU,KAAtCT,EAAaQ,SAASJ,MAAMK,MAE5BW,MAAKC,MAAAC,CAAA,mCAEL,IACE,MAAMC,EAAcT,KAAKU,MAAMR,GAC/BN,QAAQC,IAAI,cAAeY,E,CAC3B,MAAOE,GACPf,QAAQC,IAAIc,EAAMC,MAClBhB,QAAQC,IAAIc,EAAMpB,Q,KAsBxBsB,OAAOrB,iBAAiB,QAhBP,KACf,IACE,MAAMsB,EAAmBd,KAAKU,MAAMR,GACpC,GAAyB,OAArBY,EACF,OAIA5B,EAAaQ,SAASJ,MAAMK,MAAQmB,EAAiBxB,MACrDJ,EAAaQ,SAASH,QAAQI,MAAQmB,EAAiBvB,O,CAEzD,MAAOoB,GACPf,QAAQC,IAAIc,EAAMC,MAClBhB,QAAQC,IAAIc,EAAMpB,Q","sources":["src/js/03-feedback.js"],"sourcesContent":["//Rozklad jazdy:\n//import throttle\n//zadeklarowac wszystko co trzeba\n//stworzyc obiekt zawierajacy wszystkie dane tj. email, message\n//funkcja ktora zapisuje wszystko w formie, wykonsolować ją, json stringify i setItem na local storage\n//funkcja do submit event\n//jakiś if gdyby cymbał zostawił puste pola, a jesli git to wyczyscic elementy forma\n//catch error i konsol log dla .name i .message\n//przeładuj strone i pobierz wartosci z local storage\n//te wartosci .parse\n//jesli zwracają null to return\n//a jesli git to email.value=parsowaneInformacje.email/message\n//dać throttle do eventlistenera od zapisywania inputa\nimport { throttle } from 'lodash';\nconst feedbackForm = document.querySelector('.feedback-form');\nlet userData = {\n  email: '',\n  message: '',\n};\nconst saveUserData = () => {\n  userData = {\n    email: feedbackForm.elements.email.value,\n    message: feedbackForm.elements.message.value,\n  };\n  console.log(userData);\n  localStorage.setItem('feedback-form-state', JSON.stringify(userData));\n}; //zapisz w localstorage userData, konwersja na json\nfeedbackForm.addEventListener('input', throttle(saveUserData, 500)); //pobiera dane raz na pol sekundy, sprawdzilem\n//teraz submit\n\nconst getUserData = localStorage.getItem('feedback-form-state');\n\nconst submitFunction = event => {\n  event.preventDefault();\n\n  if (\n    feedbackForm.elements.email.value === '' ||\n    feedbackForm.elements.email.value === ''\n  ) {\n    alert`Please fill all the gaps!`;\n  } else {\n    try {\n      const currentData = JSON.parse(getUserData);\n      console.log(`User data: `, currentData);\n    } catch (error) {\n      console.log(error.name);\n      console.log(error.message);\n    }\n  }\n};\nfeedbackForm.addEventListener('submit', submitFunction);\n// load event\nconst loadPage = () => {\n  try {\n    const existingUserData = JSON.parse(getUserData);\n    if (existingUserData === null) {\n      return;\n    } //jeśli nie ma zapisanych danych to nie rob nic\n    //jeśli są dane to przywróć te wartości\n    else {\n      feedbackForm.elements.email.value = existingUserData.email;\n      feedbackForm.elements.message.value = existingUserData.message;\n    }\n  } catch (error) {\n    console.log(error.name);\n    console.log(error.message); //jesli error to zwroc jego nazwe i message\n  }\n};\nwindow.addEventListener('load', loadPage); //event listener na window a nie form, bo to ono jest przeładowywane\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$feedbackForm","document","querySelector","$945622fd0f572e60$var$userData","email","message","addEventListener","throttle","elements","value","console","log","localStorage","setItem","JSON","stringify","$945622fd0f572e60$var$getUserData","getItem","event","preventDefault","alert","$945622fd0f572e60$var$t","$945622fd0f572e60$var$_","currentData","parse","error","name","window","existingUserData"],"version":3,"file":"03-feedback.3a59912b.js.map"}