{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAgCC,EAASC,GAChCA,IACDA,EAAMD,EAAQE,MAAM,IAExB,OAAOP,OAAOQ,OAAOR,OAAOS,iBAAiBJ,EAAS,CAClDC,IAAK,CACDH,MAAOH,OAAOQ,OAAOF,M,0GCGjC,IAAMI,EAAeC,SAASC,cAAc,kBACxCC,EAAW,CACbC,MAAO,GACPC,QAAS,IAUXL,EAAaM,iBAAiB,SAAS,EAAAC,EAAAC,WARlB,WACnBL,EAAW,CACTC,MAAOJ,EAAaS,SAASL,MAAMX,MACnCY,QAASL,EAAaS,SAASJ,QAAQZ,OAEzCiB,QAAQC,IAAIR,GACZS,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUZ,G,GAEC,MAG9D,IAAMa,EAAcJ,aAAaK,QAAQ,uBAoBzCjB,EAAaM,iBAAiB,UAlBP,SAAAY,GAGrB,GAFAA,EAAMC,iBAGkC,KAAtCnB,EAAaS,SAASL,MAAMX,OACU,KAAtCO,EAAaS,SAASL,MAAMX,MAE5B2B,MAAKC,UAEL,IACE,IAAMC,EAAcR,KAAKS,MAAMP,GAC/BN,QAAQC,IAAK,cAAcW,E,CAC3B,MAAOE,GACPd,QAAQC,IAAIa,EAAMC,MAClBf,QAAQC,IAAIa,EAAMnB,Q,KAsBxBqB,OAAOpB,iBAAiB,QAhBP,WACf,IACE,IAAMqB,EAAmBb,KAAKS,MAAMP,GACpC,GAAyB,OAArBW,EACF,OAIA3B,EAAaS,SAASL,MAAMX,MAAQkC,EAAiBvB,MACrDJ,EAAaS,SAASJ,QAAQZ,MAAQkC,EAAiBtB,O,CAEzD,MAAOmB,GACPd,QAAQC,IAAIa,EAAMC,MAClBf,QAAQC,IAAIa,EAAMnB,Q","sources":["node_modules/@swc/helpers/lib/_tagged_template_literal.js","src/js/03-feedback.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _taggedTemplateLiteral;\nfunction _taggedTemplateLiteral(strings, raw) {\n    if (!raw) {\n        raw = strings.slice(0);\n    }\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: {\n            value: Object.freeze(raw)\n        }\n    }));\n}\n","//Rozklad jazdy:\n//import throttle\n//zadeklarowac wszystko co trzeba\n//stworzyc obiekt zawierajacy wszystkie dane tj. email, message\n//funkcja ktora zapisuje wszystko w formie, wykonsolować ją, json stringify i setItem na local storage\n//funkcja do submit event\n//jakiś if gdyby cymbał zostawił puste pola, a jesli git to wyczyscic elementy forma\n//catch error i konsol log dla .name i .message\n//przeładuj strone i pobierz wartosci z local storage\n//te wartosci .parse\n//jesli zwracają null to return\n//a jesli git to email.value=parsowaneInformacje.email/message\n//dać throttle do eventlistenera od zapisywania inputa\nimport { throttle } from 'lodash';\nconst feedbackForm = document.querySelector('.feedback-form');\nlet userData = {\n  email: '',\n  message: '',\n};\nconst saveUserData = () => {\n  userData = {\n    email: feedbackForm.elements.email.value,\n    message: feedbackForm.elements.message.value,\n  };\n  console.log(userData);\n  localStorage.setItem('feedback-form-state', JSON.stringify(userData));\n}; //zapisz w localstorage userData, konwersja na json\nfeedbackForm.addEventListener('input', throttle(saveUserData, 500)); //pobiera dane raz na pol sekundy, sprawdzilem\n//teraz submit\n\nconst getUserData = localStorage.getItem('feedback-form-state');\n\nconst submitFunction = event => {\n  event.preventDefault();\n\n  if (\n    feedbackForm.elements.email.value === '' ||\n    feedbackForm.elements.email.value === ''\n  ) {\n    alert`Please fill all the gaps!`;\n  } else {\n    try {\n      const currentData = JSON.parse(getUserData);\n      console.log(`User data: `, currentData);\n    } catch (error) {\n      console.log(error.name);\n      console.log(error.message);\n    }\n  }\n};\nfeedbackForm.addEventListener('submit', submitFunction);\n// load event\nconst loadPage = () => {\n  try {\n    const existingUserData = JSON.parse(getUserData);\n    if (existingUserData === null) {\n      return;\n    } //jeśli nie ma zapisanych danych to nie rob nic\n    //jeśli są dane to przywróć te wartości\n    else {\n      feedbackForm.elements.email.value = existingUserData.email;\n      feedbackForm.elements.message.value = existingUserData.message;\n    }\n  } catch (error) {\n    console.log(error.name);\n    console.log(error.message); //jesli error to zwroc jego nazwe i message\n  }\n};\nwindow.addEventListener('load', loadPage); //event listener na window a nie form, bo to ono jest przeładowywane\n"],"names":["Object","defineProperty","$9150774b557bdbfe$exports","value","default","strings","raw","slice","freeze","defineProperties","$b00c40859be242c5$var$feedbackForm","document","querySelector","$b00c40859be242c5$var$userData","email","message","addEventListener","$1WSnx","throttle","elements","console","log","localStorage","setItem","JSON","stringify","$b00c40859be242c5$var$getUserData","getItem","event","preventDefault","alert","$b00c40859be242c5$var$_templateObject","currentData","parse","error","name","window","existingUserData"],"version":3,"file":"03-feedback.deff2bdb.js.map"}